cps (140/60/4)

-- SC SYNTH MAPPINGS
(freq, _) = pF "freq" (Just 440)
(cutoff, _) = pF "cutoff" (Just 200)
(fatt, _) = pF "fatt" (Just 0.75)
(amp, _) = pF "amp" (Just 0.75)
(attack, _) = pF "attack" (Just 0.001)

(phaserrate, _) = pF "phaserrate" (Just 1.0)
(phaserdepth, _) = pF "phaserdepth" (Just 0.75)
(tremelorate, _) = pF "tremelorate" (Just 1.0)
(tremelodepth, _) = pF "tremelodepth" (Just 0.75)
(leslie, _) = pF "leslie" (Just 0.5)
(lrate, _) = pF "lrate" (Just 6.7)
(lsize, _) = pF "lsize" (Just 0.3)

(midicmd, midicmd_p) = pS "midicmd" (Nothing)
(midichan, midichan_p) = pF "midichan" (Nothing)
(progNum, progNum_p) = pF "progNum" (Nothing)
(val, val_p) = pF "val" (Nothing)
(uid, uid_p) = pF "uid" (Nothing)
(array, array_p) = pF "array" (Nothing)
(frames, frames_p) = pF "frames" (Nothing)
(seconds, seconds_p) = pF "seconds" (Nothing)
(minutes, minutes_p) = pF "minutes" (Nothing)
(hours, hours_p) = pF "hours" (Nothing)
(frameRate, frameRate_p) = pF "frameRate" (Nothing)
(songPtr, songPtr_p) = pF "songPtr" (Nothing)
(ctlNum, ctlNum_p) = pF "ctlNum" (Nothing)
(control, control_p) = pF "control" (Nothing)

-- SuperDirt MIDI Test
d6
$ degradeBy 0.5
$ stack [
  -- note "4 -12 24 9",
  note "[~ [4, -12, 24, 9]]",
  ccv (scale 110 50 (fast 3 (sine))) # ccn "30", -- freq
  -- ccv "50 100" # ccn "31" ]
  ccv (scale  127 70 (fast 1 (rand))) # ccn "31" ]
# s "midi"

d6 silence

-- this will play each note from the first list, summed with each from the 2nd, simulatneaously
-- # n "[3, 6]"
-- |+| n "{0, 7, 12}"
--
-- e.g.
--
-- [ n, 3 ]
-- [ n, 10 ]
-- [ n, 15 ]
-- [ n, 6 ]
-- [ n, 13 ]
-- [ n, 18 ]


-- distrib :: [Pattern Int] -> Pattern a -> Pattern a
-- distrib steps p = do steps' <- sequence steps
--                      _distrib steps' p

-- choose :: [a] -> Pattern a


d7
$ slow 1
$ degradeBy 0.1
$ distrib [8, 8, 14]
$ sound "supersaw"
-- # n "[0, 4, 7, 9, 11]" |+| n "{0, 7, 12}" |+|n "<-7 7 0 5 -5>/2"
# n "[3, 6]"
|+| n "{0, 7, 12}"
|+| n "<-7 3 0 4 -5>/2"
# cutoff (scale 3000 4000 $slow 4 $sine1)
# resonance "0.1"
# sustain "{0.09 0.25 0.15 0.09 0.08}%4"
# gain 0.8

d7 silence

d7
-- $ sound "supersaw(5, 8)"
$ distrib [8, 8, 14]
$ sound "supersaw"
-- $ sound "supersaw(5, 8, {0, 13})"
-- # n "[0, 4, 7, 9, 11]" |+| n "{0, 7, 12}" |+|n "<-7 7 0 5 -5>/2"
# n "[0.4, 4.1, 7, 9, 11]" |+| n "{0, 7, 12}" |+|n "<-7 7 0 5 -5>/2"
-- # cutoff (scale 800 20000 $slow 4 $sine1)
# bpf (scale 3000 20000 $slow 4 $sine1)
# resonance "0.1"
# sustain "{0.08 0.10 0.15}%4"
# gain 0.8

d7 silence

d1 $ sound "{arpy bass2 drum notes can}%16"


-- COUNT IN!
d1
$ slow 4
$ sound
   "[numbers:4, click:2] [click:2] [click:2] [click:2] \
  \ [numbers:3, click:2] [click:2] [click:2] [click:2] \
  \ [numbers:2, click:2] [click:2] [click:2] [click:2] \
  \ [numbers:1, click:2] [click:2] [click:2] [click:2]"

# orbit out2





-- MAIN -----------------------------------------------------------------------

d1
$ fast 4
$ degradeBy 0.0
-- $ distrib [8, 8, 14]
-- $ sound "super808"
-- $ sound "super808   super808/2  ~            supersnare  ~     ~     super808/2    ~ \
--         \super808   ~           super808/6   superclap?   ~     ~     super808      ~ "
$ sound "[super808*1 <superclap*2?, ~ ,supersnare*2?>]"
--
-- SWEEP
-- # speed (scale 8 2 (slow 4 (sine)))
-- # sustain (scale 0.5 1 (slow 16 (sine)))
-- # voice (scale 0.7 0 (slow 8 (sine)))
-- # shape (scale 0.3 0.9 (slow 64 (sine)))
# shape (choose [0.3,0.6])
-- # crush (choose [2,3,5])
-- click
# speed   "0.5 1 0.2"
-- # speed   "2.0  0.4  0.5  0.0    1.0  0.8  0.5  0.7 \
--          \ 1.0  1.0  1.8  0.7    1.0  0.8  1.0  1.0 "
-- boom
-- # sustain "1.0  0.2  0.5  0.7    1.0  0.8  0.5  0.7 \
--          \ 0.1  0.8  0.3  0.7    1.0  0.8  0.5  0.7 "
# sustain "2"
--
-- OUTPUT
# amp 0.6
-- # gain   "1.0   0.8  0.8  0.8    0.8  0.8  0.5  0.8 \
--         \ 1.0   0.8  1.0  0.9    0.8  0.8  0.5  0.8 "
-- # nudge 0.08
# orbit out1

d1 silence

-- PERC ------------------------------------------------------------------------

d3
$ distrib [4, 8, 14]
$ sound "[~ superhat]"
# pitch1 0.8
# sustain 10
# shape 0.5
# speed 0.1

d3 silence

d2
$ sometimesBy 0.5 (# crush 4)
$ degradeBy 0.3
-- $ distrib [7, 8, 14]
-- $ sound "[superhat*8] supersnare"
$ sound "[supersnare*16?, superhat*8, superstatic?]"
-- $ sound "[supersnare*4, superhat*8, superstatic]"
# speed (scale 2 0.7 (slow 32 (sine)))
# sustain (scale 0.1 0.6 (slow 64 (sine)))
-- # speed 0.2
# decay 1
# shape 0.6
-- # bpf (scale 1000 8000 (slow 64 (sine)))
# gain "[1 0.8]*4"
-- # nudge 0.08
# orbit out1

d2 silence

-- SYNTH -----------------------------------------------------------------------
d3
$ every 1 (const
  $ degradeBy 0.2
  $ slow 4
  -- $ e 5 8
  -- $ sound "~ ~ ~ superzow_msp   ~ ~ ~ superzow_msp/8    ~ ~ ~ superzow_msp    ~ ~ ~ superzow_msp/4"
  $ sound "~ ~ ~ superzow_msp ~ ~ ~ ~ superzow_msp ~ superzow_msp/3 ~ ~ superzow_msp ~ ~ ~ ~ superzow_msp*2? ~"
  # n (
      every 18
        (+ 1)
        "[[-12, -3, -5]]"
      )
  -- # slide (scale 15 1 (slow 7 (rand)))
  -- # attack (scale 0.1 0.2 (slow 6 (sine)))
  -- # attack 0.4
  # sustain (scale 0.2 0.5 (slow 16 (sine)))
  # cutoff (scale 600 2000 (slow 3 (rand)))
  # crush 2
  -- # accelerate 0.7
  # gain "0.9"
  # pan (scale 0 1 (slow 2 (rand)))
  # orbit out1
  )
$ sound "~"
# orbit out1

d3 silence

d5
$ every 4 (const
  $ degradeBy 0.2
  $ fast 2
  $ e 7 16
  $ sound "~ supersaw*2"
  # n (
      every 18
        (+ 1)
        "[-12, -3, 7]"
      )
  # slide 1
  -- # attack (scale 0.1 0.2 (slow 6 (sine)))
  # attack 0.4
  # decay 0.9
  # sustain (scale 0.7 1.1 (slow 16 (sine)))
  # hpf (scale 00 1500 (slow 3 (rand)))
  # crush 2
  # gain "1.1"
  # orbit out1
  )
$ sound "~"

# orbit out1

d5 silence












--------------------------------------------------------------------------------
-- RECYCLE BIN -----------------------------------------------------------------
--------------------------------------------------------------------------------
