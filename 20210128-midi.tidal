setcps (170/60/4)

myRate = 128

-- Backbone --------------------------------------------------------------------
do
  unmute "rytm"
  unmute "ana4-1"
  unmute "ana4-2"
  unmute "ana4-3"
  unmute "ana4-4"


do
  mute "rytm"
  mute "ana4-1"
  mute "ana4-2"
  mute "ana4-3"
  mute "ana4-4"

-- Percussion ------------------------------------------------------------------
do
  -- resetCycles
  unmute "riser"
  unmute "pulse-sub"
  unmute "hat-half"
  unmute "hat-fast"
  unmute "clicker"
  unmute "snares-170"
  unmute "soundboi"
  unmute "east-perc"
  unmute "breakz-1"
  unmute "hard-snares"

do
  mute "riser"
  mute "pulse-sub"
  mute "hat-half"
  mute "hat-fast"
  mute "clicker"
  mute "snares-170"
  mute "soundboi"
  mute "east-perc"
  mute "breakz-1"
  mute "hard-snares"


unsolo "rytm"
solo "riser"
solo "pulser"
solo "hat-half"
unsolo "hat-fast"
unsolo "clicker"
unsolo "snares-170"
unsolo "east-perc"
unsolo "break"
solo "hard-snares"
unsolo "ana4-1"
unsolo "ana4-4"

mute "pulse-sub"

mute "sq-bass"

mute "hat-half"

unmute "hat-fast"

mute "hard-snares"

mute "riser"

mute "clicker"

mute "snares-170"

mute "east-perc"

mute "spectral-001"

unmute "spectral-002"

mute "ana4-1"
unmute "ana4-4"

p "rytm" silence

unmute "rytm"

solo "rytm"

unsolo "rytm"

p "ana4-1" silence

unmute "ana4-3"
solo "ana4-3"
unsolo "ana4-3"


do
  let structure = "1 <1 1 [0 1]> 1 1 0 0 1 0 0 1 0 0 1/3 0 0 0"
  let structure1 = structure
  let structure2 = "t(4,8)"
  let structure3 = "1 <1 0 [1 0 1 0]> 1 1 0 0 1 1 0 1 0 0 1/3 0 1 0"
  let structure4 = "t(8,8)"
  let structure5 = "t(16,8)"
  let structure6 = "t(32,8)"
  --
  let pattern = (every 5 inv structure)
  let pattern1 = (every 5 inv structure1)
  let pattern2 = (every 5 inv structure2)
  let pattern3 = (every 8 inv structure3)
  let pattern4 = (every 5 inv structure4)
  let pattern5 = (every 5 inv structure5)
  let pattern6 = structure6
  --
  let track = midichan
  --
  do -- RYTM -------------------------------------------------------------------
    let bd1 = sound "rytm" # track "[0, 4]"
    p "rytm"
      $ fix ((# gain 0.65)) ("bd:8")
      $ slow 2
      $ every 64 (skip)
      $ seqPLoop [
         -- (00, 16, struct "t(3,8)" $ sound "[rytm]" # track "[0, 4]")
         (00, 16, struct pattern1 $ sound "[rytm, bd:8]" # track "[0]")
        ,(16, 20, struct pattern2 $ sound "rytm" # track "[4]")
        ,(20, 36, struct pattern3 $ sound "rytm" # track "[0, 4]")
        ,(36, 40, struct pattern4 $ sound "rytm" # track "[4]")
        ,(40, 43, struct pattern5 $ sound "rytm" # track "[4]")
        ,(43, 44, struct pattern6 $ sound "rytm" # track "[0, 4]")
      ]
      -- # stack [
          -- ccn 31 # ccv 120
          -- ccn 31 # ccv (range 70 120 (slow (myRate/2) (sine)))
          -- ccn 16 # ccv "110 0 0 0 0 0 105 0 0 0 95 0 0 0 0 0"
      -- ]
      # note "c3 g2"
      |+ note "<0 0 3 -2>"
  do -- ANA4 1 ARPS ------------------------------------------------------------
    let silence = "~"
    p "ana4-1"
      $ slow 2
      $ seqPLoop [
         (00, 16, struct pattern1 $ sound "ana4" # track 0)
        ,(16, 20, struct pattern2 $ sound "ana4" # track 0)
        ,(20, 36, struct pattern3 $ sound "ana4" # track 0)
        ,(36, 40, struct pattern4 $ sound "ana4" # track 0)
      ]
      # note
        (
          -- mask ("1 0 0 0 0 0 1 0 0 0 0 0 1/3 0 0 0")
          (
            -- scale "diminished"
            scale "chromatic"
            -- $ snowball 4 (+) (fast "<2>")
            -- $ "d5" --test
            -- $ "d5 d5/3 d5 d5 <d5 d5/2 d5 a5*3> d5 <d5 ds5 d5> f5/3"
            $ "d5'maj"
          )
        )
      -- # note "f5"
      |+ note "<0 0 3 -2>"
      # octave 6
  do -- ANA4 2 NOIZ ------------------------------------------------------------
    let silence = "~"
    p "ana4-2"
      $ press
      $ seqPLoop [
         (00, 01, sound "ana4" # track 1)
        ,(01, 16, sound "~" # track 1)
      ]
      # sustain 0.9
      |+ note "<0>"
  do -- ANA4 3 STABBER ---------------------------------------------------------
    let modSpeed = 16
    -- Amp Attack
    -- let ampEnvAttackMod    = (range 12 00 ((slow (modSpeed) $ cosine)))
    let ampEnvAttackMod    = 0
    -- Amp Sustain
    -- let ampEnvSustainMod   = (range 00 30 ((slow (modSpeed/2) $ cosine)))
    let ampEnvSustainMod   = 0
    -- Amp Release
    -- let ampEnvReleaseMod   = (range 71 120 ((slow (modSpeed*2) $ cosine)))
    let ampEnvReleaseMod   = 71
    -- Filter Attack
    let filterEnvAttackMod = (range 05 100 ((slow modSpeed $ cosine)))
    -- let filterEnvAttackMod = 35
    -- FX
    -- let delaySendMod = (range 40 10 ((slow modSpeed $ cosine)))
    -- let reverbSendMod = (range 40 10 ((slow modSpeed $ cosine)))
    -- MIDI
    let midiControl = stack [
                       ccn 104 # ccv ampEnvAttackMod
                      ,ccn 106 # ccv ampEnvSustainMod
                      ,ccn 107 # ccv ampEnvReleaseMod
                      ,ccn 108 # ccv filterEnvAttackMod
                     ]
    let midiControl2 = stack [
                       ccn 104 # ccv (ampEnvAttackMod)
                      ,ccn 106 # ccv (range 40 70 ((slow (modSpeed) $ cosine)))
                      ,ccn 107 # ccv (range 71 30 ((slow (modSpeed) $ cosine)))
                      ,ccn 108 # ccv filterEnvAttackMod
                     ]
    let silence = "~"
    p "ana4-3"
      $ slow 2
      $ every 3 (slow 1)
      $ seqPLoop [
         -- (00, 16, struct "t(3,8)" $ sound "ana4" # midiControl  # track 2)
         (00, 16, struct pattern1 $ sound "ana4" # midiControl  # track 2)
        ,(16, 20, struct pattern2 $ sound "ana4" # midiControl2 # track 2)
        ,(20, 36, struct pattern3 $ sound "ana4" # midiControl  # track 2)
        ,(36, 40, struct pattern4 $ sound "ana4" # midiControl  # track 2)
        ,(40, 43, struct pattern5 $ sound "ana4" # midiControl  # track 2)
        ,(43, 44, struct pattern6 $ sound "ana4" # midiControl2  # track 2)
      ]
      # note
        (
          (
            scale "chromatic"
            $ "d5 d5/3 d5 d5 <d5 d5/2 d5 a5*3> d5 <d5 ds5 d5> f5/3"
          )
        )
      |+ note "<0 0 3 -2>"
  do -- ANA4 4 FM BASS ---------------------------------------------------------
    let silence = "~"
    p "ana4-4"
      $ slow 2
      $ every 3 (slow 1)
      $ every 7 skip
      $ seqPLoop [
         -- (00, 16, struct "t(3,8)" $ sound "ana4" # track 3)
         (00, 16, struct pattern1 $ sound "ana4" # track 3)
        ,(16, 20, struct pattern2 $ sound "ana4" # track 3)
        ,(20, 36, struct pattern3 $ sound "ana4" # track 3)
        ,(36, 40, struct pattern4 $ sound "ana4" # track 3)
        ,(40, 43, struct pattern5 $ sound "ana4" # track 3)
        ,(43, 44, struct pattern6 $ sound "ana4" # track 3)
      ]
      # note
        (
          (
            scale "chromatic"
            $ "d5 d5/3 d5 d5 <d5 d5/2 d5 a5*3> d5 <d5 ds5 d5> f5/3"
          )
        )
      |+ note "<0 0 3 -2>"
